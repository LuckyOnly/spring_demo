<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--userDao.class的全路径 -->

<mapper namespace="com.zff.dao.UserDao">
    <!--启动二级缓存 -->
    <cache/>
    <resultMap id="lazyUserAccountMap" type="userAccount">
        <id property="id" column="id"></id>
        <result property="username" column="username"></result>
        <result property="address" column="address"></result>
        <result property="sex" column="sex"></result>
        <result property="birthday" column="birthday"></result>
        <!-- user对象中的accountList,account是对象-->
        <collection property="accountList" ofType="account" select="com.myitem.dao.AccountDao.findById" column="id">

        </collection>
    </resultMap>
    <resultMap id="userAccountMap" type="userAccount">
        <id property="id" column="id"></id>
        <result property="username" column="username"></result>
        <result property="address" column="address"></result>
        <result property="sex" column="sex"></result>
        <result property="birthday" column="birthday"></result>
       <!-- user对象中的accountList,account是对象-->
        <collection property="accountList" ofType="account">
            <!--aid 为别名-->
            <id property="id" column="aid"></id>
            <result property="uid" column="uid"></result>
            <result property="money" column="money"></result>
        </collection>
    </resultMap>
    <!--user在SqlMapConfig.xml的typeAlias别名 -->

    <resultMap id="userMap" type="user">
        <id property="id" column="id"></id>
        <result property="username" column="username"></result>
        <result property="address" column="address"></result>
        <result property="sex" column="sex"></result>
        <result property="birthday" column="birthday"></result>
    </resultMap>
    <sql id="defalutUser">
        select * from user
    </sql>

    <!--配置sql:id为UserDao的方法名称-->
<!--    <select id="findAll" resultMap="userAccountMap">-->
<!--        SELECT u.*,a.id AS aid,a.MONEY,a.UID FROM user u LEFT JOIN account a ON a.uid=u.id-->
<!--    </select>-->
    <insert id="saveUser" parameterType="user" >
<!-- keyColumn对应数据库的主键，keyProperty是对应pojo属性名-->
        <selectKey keyProperty="id" keyColumn="id" resultType="int" order="AFTER">
            select last_insert_id();
        </selectKey>
        insert into user(username,address,sex,birthday)
        values (#{username},#{address},#{sex},#{birthday})
    </insert>

    <delete id="deleteUser" parameterType="int">
        delete from user where id=#{id}
    </delete>
<!--trim标签一般用于去除sql语句中多余的and关键字,逗号,或者给sql语句拼接where、set等前缀-->
    <update id="updateUser" parameterType="user">
        update user
        <trim prefix="set" suffixOverrides=",">
            <if test="username!=null">username=#{username},</if>
            <if test="address!=null">address=#{address},</if>
            <if test="sex!=null">sex=#{sex},</if>
            <if test="birthday!=null">birthday=#{birthday},</if>
        </trim>
        where id=#{id}
    </update>
<!-- 开启二级缓存-->
    <select id="findUserById" parameterType="int" resultMap="userMap" useCache="true">
        select * from user where id=#{id}
    </select>

    <select id="findUserByName" parameterType="String" resultMap="userMap">
        select * from user where username like #{name}
    </select>

    <select id="findUserByCondition" parameterType="user" resultMap="userMap">
        select * from user
        <where>
            <if test="username!=null">
                username=#{username}
            </if>

            <if test="sex!=null">
                and   sex=#{sex}
            </if>
        </where>
    </select>
    <select id="findUserByids" resultMap="userMap" parameterType="queryvo">
        <include refid="defalutUser"></include>
        <where>
        <if test="ids!=null and ids.size>0">
            <foreach collection="ids" open="and id in (" close=")" item="id1" separator=",">
                #{id1}
            </foreach>
        </if>
        </where>
    </select>
    <select id="findAll" resultMap="lazyUserAccountMap">
        <include refid="defalutUser"></include>
    </select>
</mapper>